// Generated by CoffeeScript 1.4.0
var Helper, Phase, PreTransform, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

Helper = require('../helper');

Phase = require('./phase').Phase;

PreTransform = (function(_super) {

  __extends(PreTransform, _super);

  function PreTransform(context) {
    PreTransform.__super__.constructor.call(this, context, 'pretransform');
  }

  PreTransform.prototype.preCondition = function() {
    Helper.assert(this.context.annotations != null);
    Helper.assert(this.context.errors != null);
    return Helper.assert(this.context.content != null);
  };

  PreTransform.prototype.postCondition = function() {
    return Helper.assert(this.context.content != null);
  };

  PreTransform.prototype.execute = function() {
    return {
      content: this.clearOldResutls_(this.context.content, this.context.annotations)
    };
  };

  PreTransform.prototype.clearOldResutls_ = function(content, annotations) {
    var lines,
      _this = this;
    content = content.replace(/\n?\/\/ (>>|~>|\?>?) .*$/gm, '');
    lines = content.split('\n');
    annotations.forEach(function(_arg) {
      var body, columnNo, comment, line, lineNo, _ref;
      lineNo = _arg.line, columnNo = _arg.column;
      line = lines[lineNo];
      _ref = Helper.splitAt(line, columnNo), body = _ref[0], comment = _ref[1];
      comment = comment.replace(/^(\/\/ *?=>).*$/, '$1');
      return lines[lineNo] = "" + body + comment;
    });
    return lines.join('\n');
  };

  return PreTransform;

})(Phase);

exports.factory = function(context) {
  return new PreTransform(context);
};
