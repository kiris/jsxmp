// Generated by CoffeeScript 1.4.0
var Helper, Phase;

Helper = require('../helper');

Phase = (function() {

  function Phase(context, name) {
    this.context = context;
    this.name = name;
  }

  Phase.prototype.run = function() {
    this.debug("execute " + this.name);
    return this.execute();
  };

  Phase.prototype.execute = function() {};

  Phase.prototype.preCondition = function() {};

  Phase.prototype.postCondition = function() {};

  Phase.prototype.invariant = function() {
    Helper.assert(this.context != null);
    return Helper.assert(this.context.env != null);
  };

  Phase.prototype.writeResult = function(message) {
    return this.context.result += message;
  };

  Phase.prototype.writelnResult = function(message) {
    return this.writeResult(message + '\n');
  };

  Phase.prototype.writeError = function(message) {
    return this.context.error += message;
  };

  Phase.prototype.writelnError = function(message) {
    return this.writeError(message + '\n');
  };

  Phase.prototype.debug = function(message) {
    if (this.context.env.debug) {
      return this.writeResult("[DEBUG] " + message + "\n");
    }
  };

  return Phase;

})();

exports.Phase = Phase;
