// Generated by CoffeeScript 1.4.0
var Helper, Phase, Read,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Helper = require('../helper');

Phase = require('./phase').Phase;

Read = (function(_super) {

  __extends(Read, _super);

  function Read(context) {
    Read.__super__.constructor.call(this, context, 'read');
  }

  Read.prototype.preCondition = function() {
    return Helper.assert(!(this.context.content != null));
  };

  Read.prototype.postCondition = function() {
    return Helper.assert(this.context.content != null);
  };

  Read.prototype.execute = function() {
    return {
      content: this.readFile_(this.context.env.file)
    };
  };

  Read.prototype.readFile_ = function(file) {
    var fs;
    fs = require('fs');
    return fs.readFileSync(file, 'utf-8');
  };

  return Read;

})(Phase);

exports.factory = function(context) {
  return new Read(context);
};
